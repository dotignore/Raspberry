http://my-web-site.iobb.net/~yuki/2018/03/24/


install
2019-09-26-raspbian-buster-full.iso
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
Code - OSS
1)
wget https://packagecloud.io/headmelted/codebuilds/gpgkey sudo apt-key add gpgkey
2)
sudo -s
3)
. <( wget -O - https://code.headmelted.com/installers/apt.sh )
4)
apt-get install code-oss=1.29.0-1539702286
5)
#apt-mark hold code-oss
#apt-mark unhold code-oss

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=


Preparing to unpack .../code-oss_1.42.0-1575969827_armhf.deb ...
Unpacking code-oss (1.42.0-1575969827) ...
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$lsb_release -a
No LSB modules are available.
Distributor ID:	Raspbian
Description:	Raspbian GNU/Linux 10 (buster)
Release:	10
Codename:	buster

$gcc --version
gcc (Raspbian 8.3.0-6+rpi1) 8.3.0
Copyright (C) 2018 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

$g++ --version
g++ (Raspbian 8.3.0-6+rpi1) 8.3.0
Copyright (C) 2018 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

$gdb --version
GNU gdb (Raspbian 8.2.1-2) 8.2.1
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

$make --version
GNU Make 4.2.1
Built for arm-unknown-linux-gnueabihf
Copyright (C) 1988-2016 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

makefile
# Makefile 
#
#     make clean
#     make
#     make exec
#
#-----------------------------------------  
 
#####
TARGET = outAscii 
 
OBJ     = 
OBJ    += outAsciiCode.o
 
 
# Optimaze Option
# 
CFLAGOPT  = 
CFLAGOPT += -O0
 
#
#
# cc options:
CFLAGS =
CFLAGS += -Wall 
CFLAGS += -g 
CFLAGS += $(CFLAGOPT)
 
 
#
# Link-time cc options:
LDFLAGS =
 
CC  = gcc
CPP = g++
 
#----------------------------- Command
#                                       file deletion command
RM= rm -f
#                                       linker
LN= $(CC)
 
#----------------------------------------------
all: $(TARGET)
 
.c.o:
	#----------------------------------------------------- [$<]
	$(CC)  $(CFLAGS)  -c $*.c
 
.cpp.o:
	#----------------------------------------------------- [$<]
	$(CPP) $(CFLAGS)  -c $*.cpp
 
$(TARGET) : $(OBJ) 
	#------------------------------------------------------ LINK
	$(LN) -o $(TARGET) $(OBJ)  $(LDFLAGS)  
 
 
clean:
	$(RM) *.o $(TARGET)
 
exec:
	./$(TARGET)

c_cpp_properties.json
N/A

launch.json
{
    "version": "0.2.0",
    "configurations": [

        {
            "name": "(gdb) Launch",
            "type": "cppdbg",
            "request": "launch",
            "program": "/home/pi/myHome/outAsciiCode.out",
            "args": [],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}",
            "environment": [],
            "externalConsole": true,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        }
      ]
    }

tasks.json
{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "debug",
            "type": "shell",
            "command": "",
            "args": [
                "g++",
                "-g",
                "${relativeFile}",
                "-o",
                "${fileBasenameNoExtension}.out"
            ],
            "problemMatcher": [
                "$gcc"
            ]
        },
        {
            "label": "Compile and run",
            "type": "shell",
            "command": "",
            "args": [
                "g++",
                "-g",
                "${relativeFile}",
                "-o",
                "${fileBasenameNoExtension}.out",
                "&&",
                "clear",
                "&&",
                "./${fileBasenameNoExtension}.out"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": {
                "owner": "cpp",
                "fileLocation": [
                    "relative",
                    "${workspaceRoot}"
                ],
            "pattern": {
                    "regexp": "^(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "severity": 4,
                    "message": 5
                }
            }
        }

    ]
}

press F5
Error message
Debug adapter process has terminated unexpectedly (read ECONNRESET)

or 

Run Task -> debag
nothing massage
> Executing task:  g++ -g outAsciiCode.cpp -o outAsciiCode.out <


Terminal will be reused by tasks, press any key to close it.
